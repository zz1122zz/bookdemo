<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.creation.demo.entity.bookdemo.mysql.StringPropertyMapper">
  <resultMap id="BaseResultMap" type="org.creation.demo.entity.bookdemo.StringProperty">
    <id column="unique_property_code" jdbcType="BIGINT" property="uniquePropertyCode" />
    <result column="unique_entity_code" jdbcType="BIGINT" property="uniqueEntityCode" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="value" jdbcType="VARCHAR" property="value" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    unique_property_code, unique_entity_code, name, value
  </sql>
  <select id="selectByExample" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from string_property
    where unique_property_code = #{uniquePropertyCode,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from string_property
    where unique_property_code = #{uniquePropertyCode,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria">
    delete from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    insert into string_property (unique_property_code, unique_entity_code, 
      name, value)
    values (#{uniquePropertyCode,jdbcType=BIGINT}, #{uniqueEntityCode,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    insert into string_property
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uniquePropertyCode != null">
        unique_property_code,
      </if>
      <if test="uniqueEntityCode != null">
        unique_entity_code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="value != null">
        value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uniquePropertyCode != null">
        #{uniquePropertyCode,jdbcType=BIGINT},
      </if>
      <if test="uniqueEntityCode != null">
        #{uniqueEntityCode,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria" resultType="java.lang.Integer">
    select count(*) from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update string_property
    <set>
      <if test="record.uniquePropertyCode != null">
        unique_property_code = #{record.uniquePropertyCode,jdbcType=BIGINT},
      </if>
      <if test="record.uniqueEntityCode != null">
        unique_entity_code = #{record.uniqueEntityCode,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update string_property
    set unique_property_code = #{record.uniquePropertyCode,jdbcType=BIGINT},
      unique_entity_code = #{record.uniqueEntityCode,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    update string_property
    <set>
      <if test="uniqueEntityCode != null">
        unique_entity_code = #{uniqueEntityCode,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=VARCHAR},
      </if>
    </set>
    where unique_property_code = #{uniquePropertyCode,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    update string_property
    set unique_entity_code = #{uniqueEntityCode,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR}
    where unique_property_code = #{uniquePropertyCode,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into string_property  (unique_property_code, unique_entity_code, 
        name, value)
      values
      <foreach collection="items" index="index" item="item" separator=",">
      (#{item.uniquePropertyCode,jdbcType=BIGINT}, #{item.uniqueEntityCode,jdbcType=BIGINT}, 
        #{item.name,jdbcType=VARCHAR}, #{item.value,jdbcType=VARCHAR})
      </foreach>
    </if>
  </insert>
  <select id="selectByExampleWithRowbounds" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <resultMap id="BaseResultMap" type="org.creation.demo.entity.bookdemo.StringProperty">
    <id column="unique_property_code" jdbcType="BIGINT" property="uniquePropertyCode" />
    <result column="unique_entity_code" jdbcType="BIGINT" property="uniqueEntityCode" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="value" jdbcType="VARCHAR" property="value" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    unique_property_code, unique_entity_code, name, value
  </sql>
  <select id="selectByExample" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from string_property
    where unique_property_code = #{uniquePropertyCode,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from string_property
    where unique_property_code = #{uniquePropertyCode,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria">
    delete from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    insert into string_property (unique_property_code, unique_entity_code, 
      name, value)
    values (#{uniquePropertyCode,jdbcType=BIGINT}, #{uniqueEntityCode,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    insert into string_property
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uniquePropertyCode != null">
        unique_property_code,
      </if>
      <if test="uniqueEntityCode != null">
        unique_entity_code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="value != null">
        value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uniquePropertyCode != null">
        #{uniquePropertyCode,jdbcType=BIGINT},
      </if>
      <if test="uniqueEntityCode != null">
        #{uniqueEntityCode,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria" resultType="java.lang.Integer">
    select count(*) from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update string_property
    <set>
      <if test="record.uniquePropertyCode != null">
        unique_property_code = #{record.uniquePropertyCode,jdbcType=BIGINT},
      </if>
      <if test="record.uniqueEntityCode != null">
        unique_entity_code = #{record.uniqueEntityCode,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update string_property
    set unique_property_code = #{record.uniquePropertyCode,jdbcType=BIGINT},
      unique_entity_code = #{record.uniqueEntityCode,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    update string_property
    <set>
      <if test="uniqueEntityCode != null">
        unique_entity_code = #{uniqueEntityCode,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=VARCHAR},
      </if>
    </set>
    where unique_property_code = #{uniquePropertyCode,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    update string_property
    set unique_entity_code = #{uniqueEntityCode,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR}
    where unique_property_code = #{uniquePropertyCode,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into string_property  (unique_property_code, unique_entity_code, 
        name, value)
      values
      <foreach collection="items" index="index" item="item" separator=",">
      (#{item.uniquePropertyCode,jdbcType=BIGINT}, #{item.uniqueEntityCode,jdbcType=BIGINT}, 
        #{item.name,jdbcType=VARCHAR}, #{item.value,jdbcType=VARCHAR})
      </foreach>
    </if>
  </insert>
  <select id="selectByExampleWithRowbounds" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <resultMap id="BaseResultMap" type="org.creation.demo.entity.bookdemo.StringProperty">
    <id column="uniquePropertyCode" jdbcType="BIGINT" property="uniquepropertycode" />
    <result column="uniqueEntityCode" jdbcType="BIGINT" property="uniqueentitycode" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="value" jdbcType="VARCHAR" property="value" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uniquePropertyCode, uniqueEntityCode, name, value
  </sql>
  <select id="selectByExample" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from string_property
    where uniquePropertyCode = #{uniquepropertycode,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from string_property
    where uniquePropertyCode = #{uniquepropertycode,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria">
    delete from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    insert into string_property (uniquePropertyCode, uniqueEntityCode, 
      name, value)
    values (#{uniquepropertycode,jdbcType=BIGINT}, #{uniqueentitycode,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    insert into string_property
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uniquepropertycode != null">
        uniquePropertyCode,
      </if>
      <if test="uniqueentitycode != null">
        uniqueEntityCode,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="value != null">
        value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uniquepropertycode != null">
        #{uniquepropertycode,jdbcType=BIGINT},
      </if>
      <if test="uniqueentitycode != null">
        #{uniqueentitycode,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria" resultType="java.lang.Integer">
    select count(*) from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update string_property
    <set>
      <if test="record.uniquepropertycode != null">
        uniquePropertyCode = #{record.uniquepropertycode,jdbcType=BIGINT},
      </if>
      <if test="record.uniqueentitycode != null">
        uniqueEntityCode = #{record.uniqueentitycode,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update string_property
    set uniquePropertyCode = #{record.uniquepropertycode,jdbcType=BIGINT},
      uniqueEntityCode = #{record.uniqueentitycode,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    update string_property
    <set>
      <if test="uniqueentitycode != null">
        uniqueEntityCode = #{uniqueentitycode,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=VARCHAR},
      </if>
    </set>
    where uniquePropertyCode = #{uniquepropertycode,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    update string_property
    set uniqueEntityCode = #{uniqueentitycode,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR}
    where uniquePropertyCode = #{uniquepropertycode,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into string_property  (uniquePropertyCode, uniqueEntityCode, 
        name, value)
      values
      <foreach collection="items" index="index" item="item" separator=",">
      (#{item.uniquepropertycode,jdbcType=BIGINT}, #{item.uniqueentitycode,jdbcType=BIGINT}, 
        #{item.name,jdbcType=VARCHAR}, #{item.value,jdbcType=VARCHAR})
      </foreach>
    </if>
  </insert>
  <select id="selectByExampleWithRowbounds" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <resultMap id="BaseResultMap" type="org.creation.demo.entity.bookdemo.StringProperty">
    <id column="uniqePropertyCode" jdbcType="BIGINT" property="uniqepropertycode" />
    <result column="uniqeEntityCode" jdbcType="BIGINT" property="uniqeentitycode" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="value" jdbcType="VARCHAR" property="value" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uniqePropertyCode, uniqeEntityCode, name, value
  </sql>
  <select id="selectByExample" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from string_property
    where uniqePropertyCode = #{uniqepropertycode,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from string_property
    where uniqePropertyCode = #{uniqepropertycode,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria">
    delete from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    insert into string_property (uniqePropertyCode, uniqeEntityCode, 
      name, value)
    values (#{uniqepropertycode,jdbcType=BIGINT}, #{uniqeentitycode,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    insert into string_property
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uniqepropertycode != null">
        uniqePropertyCode,
      </if>
      <if test="uniqeentitycode != null">
        uniqeEntityCode,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="value != null">
        value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uniqepropertycode != null">
        #{uniqepropertycode,jdbcType=BIGINT},
      </if>
      <if test="uniqeentitycode != null">
        #{uniqeentitycode,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria" resultType="java.lang.Integer">
    select count(*) from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update string_property
    <set>
      <if test="record.uniqepropertycode != null">
        uniqePropertyCode = #{record.uniqepropertycode,jdbcType=BIGINT},
      </if>
      <if test="record.uniqeentitycode != null">
        uniqeEntityCode = #{record.uniqeentitycode,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update string_property
    set uniqePropertyCode = #{record.uniqepropertycode,jdbcType=BIGINT},
      uniqeEntityCode = #{record.uniqeentitycode,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    update string_property
    <set>
      <if test="uniqeentitycode != null">
        uniqeEntityCode = #{uniqeentitycode,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=VARCHAR},
      </if>
    </set>
    where uniqePropertyCode = #{uniqepropertycode,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.creation.demo.entity.bookdemo.StringProperty">
    update string_property
    set uniqeEntityCode = #{uniqeentitycode,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR}
    where uniqePropertyCode = #{uniqepropertycode,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into string_property  (uniqePropertyCode, uniqeEntityCode, 
        name, value)
      values
      <foreach collection="items" index="index" item="item" separator=",">
      (#{item.uniqepropertycode,jdbcType=BIGINT}, #{item.uniqeentitycode,jdbcType=BIGINT}, 
        #{item.name,jdbcType=VARCHAR}, #{item.value,jdbcType=VARCHAR})
      </foreach>
    </if>
  </insert>
  <select id="selectByExampleWithRowbounds" parameterType="org.creation.demo.entity.bookdemo.StringPropertyCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from string_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
</mapper>